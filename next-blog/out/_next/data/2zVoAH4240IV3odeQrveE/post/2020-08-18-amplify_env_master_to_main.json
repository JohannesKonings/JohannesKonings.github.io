{"pageProps":{"frontmatter":{"layout":"post","title":"AWS Amplify Console: How I changed master branch and env to main","published":true,"date":"2020-08-18 08:15:18","summary":"Change of the master branch end amplfiy env to main and migration of the env data","categories":"aws","thumbnail":null,"tags":["aws","AWS Amplify","AWS Amplify Console"]},"content":"\nAs part of #BlackLivesMatter there was a discussion to rename git branch master to main. How to do that in git and GitHub and some more about the background is described here:\n[http://www.kapwing.com/blog/how-to-rename-your-master-branch-to-main-in-git/](http://www.kapwing.com/blog/how-to-rename-your-master-branch-to-main-in-git/)\n\nTogether with the master branch I had a master env, which was connected to the git master branch in the amplify console. I also wanted to rename this master env.\n\n# AWS Amplify \n\nAfter the master branch was renamed to main, the corresponding env have to be also renamed from master to main.\n\n## Create new env\n\nCheck If you are in the master env with `amplify status`. If not checkout the master env with `amplify env checkout master`.\nRun the command `amplify add env main` and `amplify push`. After that, you can connect the main branch with the main env in the amplify console.\n\n## Connection of main branch with main env in the Amplify Console\n\nThe new main branch and the new main env can now be connected in the amplify console.\n\n![Amplify Console connection branch to env]({{ site.baseurl }}/img/2020-08-18-amplify_env_master_to_main/amplify_console_connection_branch_to_env1.png)\n\n![Amplify Console connection branch to env]({{ site.baseurl }}/img/2020-08-18-amplify_env_master_to_main/amplify_console_connection_branch_to_env2.png)\n\nAfterwards the production branch must be changed to main.\n\n![Amplify Console production branch]({{ site.baseurl }}/img/2020-08-18-amplify_env_master_to_main/amplify_console_production_branch.png)\n\n# Migration\n\nThe new env main is now ready to use, but the data is missing. That must be migrated from the master env to the main env. In my case, it was Cognito users, DynamoDB data and S3 profile photos.\n\n## Cognito\n\nThere are some approaches to export und import cognito users:\n\n[https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-import-users.html](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-import-users.html)\n\n[https://medium.com/collaborne-engineering/migrate-aws-cognito-user-pools-ff2a91a745a2](https://medium.com/collaborne-engineering/migrate-aws-cognito-user-pools-ff2a91a745a2)\n\nHowever, since it is a small internal app, it is sufficient for users to register again ðŸ˜Š\n\n\n## DynamoDb\n\nThe DynamoDB data is more important. The easiest way to migrate the data was with a shell script and the aws cli: \n\n[dynamodb-migration.sh](https://github.com/JohannesKonings/fff-badminton/blob/main/AmplifyEnvMigration/dynamodb-migration.sh)\n\n## S3\n\nAs described here the users can upload new profile pictures:\n[AWS Amplify Storage: React example for Avatar pictures](https://dev.to/johanneskonings/aws-amplify-storage-react-example-for-avatar-pictures-273o)\n\nThat profile pictures can also be copied by a script [s3-migration.sh](https://github.com/JohannesKonings/fff-badminton/blob/main/AmplifyEnvMigration/s3-migration.sh). But it's necessary to rename the folder name to the new identity pool identity browser id, that the pictures will be found.\n\n![identity brwoser]({{ site.baseurl }}/img/2020-08-18-amplify_env_master_to_main/identity_browser.png)\n\nI fixed that manually ðŸ˜Š\n\n\n\n\n\n\n"},"__N_SSG":true}